{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","NewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogs","dialogsPage","messages","dialogsElements","map","d","key","messageElements","m","dialogsItems","values","addMessageAction","newMessageText","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,+FCY/HC,EATK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCAvBC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,iCC4BvCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAClCC,KAAM,qBADkBD,EAdL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,kBAACC,EAAA,EAAD,CAAOV,KAAM,iBACNW,UAAWC,IACXC,YAAa,oBACbC,SAAU,CAACC,IAAUZ,IAH5B,KAIA,6BACI,oDAUDa,EA7CC,SAACxB,GAEb,IAAIyB,EAAUzB,EAAM0B,YAAYD,QAC5BE,EAAW3B,EAAM0B,YAAYC,SAE7BC,EAAkBH,EAAQI,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAatB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QAC/E8B,EAAkBL,EAASE,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASqB,IAAKE,EAAE/B,QAM5E,OACI,yBAAKC,UAAWC,IAAEqB,SACd,yBAAKtB,UAAWC,IAAE8B,cACbN,GAEL,yBAAKzB,UAAWC,IAAEuB,UACbK,EACD,kBAACnB,EAAD,CAAqBG,SAXb,SAACmB,GACjBnC,EAAMoC,iBAAiBD,EAAOE,sB,wBCGvBC,sBACXC,aAfkB,SAACC,GACnB,MAAO,CACHd,YAAac,EAAMd,gBAIF,SAACe,GACtB,MAAO,CACHL,iBAAkB,SAACC,GACfI,EAASC,YAAwBL,SAMKM,IADnCL,CACqDd","file":"static/js/4.c688bc58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1pc4J\",\"dialogsItems\":\"Dialogs_dialogsItems__3w5YH\",\"active\":\"Dialogs_active__1fIWS\",\"messages\":\"Dialogs_messages__KLwWz\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validarors/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogs = props.dialogsPage.dialogs;\r\n    let messages = props.dialogsPage.messages;\r\n\r\n    let dialogsElements = dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messageElements = messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessageAction(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <NewMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={'newMessageText'}\r\n                   component={Textarea}\r\n                   placeholder={'Enter new message'}\r\n                   validate={[required, maxLength50]}> </Field>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMessageFormRedux = reduxForm({\r\n    form: 'dialogsAddMessage'\r\n})(NewMessageForm);\r\n\r\nexport default Dialogs;\r\n","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageAction: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}