{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validarors/validators.js","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","props","hasError","className","styles","formControl","Textarea","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogsItem","path","id","dialog","active","Message","message","maxLength50","NewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogs","dialogsPage","messages","dialogsElements","map","d","key","messageElements","m","dialogsItems","values","addMessageAction","newMessageText","compose","dispatch","addMessageActionCreator"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCGrHC,EAAc,SAAAA,GAAW,OAAI,YAAgD,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWC,EAAW,gCACxEC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,kBAAC,EAAD,iBAAiBH,EAAWI,IAC3BC,GAAY,kCAAQF,EAAR,QAKZM,EAAWV,EAAY,YAEvBW,EAAQX,EAAY,SAEpBY,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAsC,IAA3BX,EAA0B,uDAAlB,GAAIY,EAAc,uDAAP,GACrF,OACI,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EACbG,UAAWA,EACXF,KAAMA,EACNI,SAAUH,GACNV,IACRY,K,iCC1Bf,oEAAO,IAAME,EAAW,SAAAC,GACpB,IAAGA,EACH,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCLlCxB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,sICG1IyB,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAK1B,MAAMqB,OAER,kBAACG,EAAcE,KAAK1B,OAFG,kBAAC,IAAD,CAAU2B,GAAI,eAJT,GAEXC,IAAMJ,WAUtC,OAFqCK,YAAQV,EAARU,CAAoCJ,K,8FCL9DK,EATK,SAAC9B,GACjB,IAAI+B,EAAO,YAAc/B,EAAMgC,GAC/B,OACI,yBAAK9B,UAAWC,IAAO8B,OAAS,IAAM9B,IAAO+B,QACzC,kBAAC,IAAD,CAASP,GAAII,GAAO/B,EAAMS,QCAvB0B,EAJC,SAACnC,GACb,OAAO,yBAAKE,UAAWC,IAAOiC,SAAUpC,EAAMoC,U,oCC4B5CC,EAAcrB,YAAiB,IAgB/BsB,EAAsBC,YAAU,CAClCC,KAAM,qBADkBD,EAdL,SAACvC,GACpB,OACI,0BAAMyC,SAAUzC,EAAM0C,cAClB,kBAACC,EAAA,EAAD,CAAOlC,KAAM,iBACNE,UAAWN,IACXG,YAAa,oBACbK,SAAU,CAACC,IAAUuB,IAH5B,KAIA,6BACI,oDAUDO,EA7CC,SAAC5C,GAEb,IAAI6C,EAAU7C,EAAM8C,YAAYD,QAC5BE,EAAW/C,EAAM8C,YAAYC,SAE7BC,EAAkBH,EAAQI,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAazC,KAAMyC,EAAEzC,KAAM0C,IAAKD,EAAElB,GAAIA,GAAIkB,EAAElB,QAC/EoB,EAAkBL,EAASE,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASjB,QAASiB,EAAEjB,QAASe,IAAKE,EAAErB,QAM5E,OACI,yBAAK9B,UAAWC,IAAO0C,SACnB,yBAAK3C,UAAWC,IAAOmD,cAClBN,GAEL,yBAAK9C,UAAWC,IAAO4C,UAClBK,EACD,kBAACd,EAAD,CAAqBG,SAXb,SAACc,GACjBvD,EAAMwD,iBAAiBD,EAAOE,sB,yBCGvBC,sBACX7B,aAfkB,SAACT,GACnB,MAAO,CACH0B,YAAa1B,EAAM0B,gBAIF,SAACa,GACtB,MAAO,CACHH,iBAAkB,SAACC,GACfE,EAASC,YAAwBH,SAMKlC,IADnCmC,CACqDd","file":"static/js/6.f3df876d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3jh4Z\",\"error\":\"FormsControls_error__2KkGE\",\"formSummaryError\":\"FormsControls_formSummaryError__3g1QG\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = FormControl => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <FormControl {...input} {...props} />\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = FormControl('textarea');\r\n\r\nexport const Input = FormControl('input')\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   component={component}\r\n                   name={name}\r\n                   validate={validators}\r\n                   {...props}\r\n            />{text}\r\n        </div>\r\n    )\r\n}","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1pc4J\",\"dialogsItems\":\"Dialogs_dialogsItems__3w5YH\",\"active\":\"Dialogs_active__1fIWS\",\"messages\":\"Dialogs_messages__KLwWz\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={styles.dialog + \" \" + styles.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;\r\n","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={styles.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validarors/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogs = props.dialogsPage.dialogs;\r\n    let messages = props.dialogsPage.messages;\r\n\r\n    let dialogsElements = dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messageElements = messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessageAction(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                {messageElements}\r\n                <NewMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={'newMessageText'}\r\n                   component={Textarea}\r\n                   placeholder={'Enter new message'}\r\n                   validate={[required, maxLength50]}> </Field>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMessageFormRedux = reduxForm({\r\n    form: 'dialogsAddMessage'\r\n})(NewMessageForm);\r\n\r\nexport default Dialogs;\r\n","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageAction: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}