{"version":3,"sources":["api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","redux/auth-reducer.js","components/Header/Header.module.css","components/common/Preloader/Preloader.jsx","redux/profile-reducer.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","assets/React-logo.png","components/common/Preloader/Preloader.module.css","assets/Preloader.gif"],"names":["instance","axios","withCredentials","headers","baseURL","usersApi","getUsersRequest","currentPage","pageSize","get","unfollowRequest","userId","delete","followRequest","post","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","Boolean","window","location","hostname","match","Navbar","className","styles","nav","item","to","activeClassName","active","Header","props","header","logoContainer","src","headerLogo","alt","loginBlock","isAuth","loginBlockContainer","Button","onClick","variant","size","HeaderContainer","this","React","Component","connect","state","auth","initialState","initialized","appReducer","action","type","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","DialogsContainer","lazy","ProfileContainer","UsersContainer","LoginPage","App","initializeApp","fallback","exact","path","render","Preloader","AppWrapper","dispatch","promise","getAuthUserData","Promise","all","then","withRouter","SocialNetwork","basename","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","isFetching","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","a","response","data","resultCode","id","message","messages","length","stopSubmit","_error","url","preloader","posts","likesCount","newPostText","setUserProfile","setStatus","getUserProfile","addPost","addPostActionCreator","reset","getProfileStatus","updateProfileStatus","file","photos","getState","newPost","filter","p","postId","dialogs","name","addMessage","newMessageText","addMessageActionCreator","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","users","totalUsersCount","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","page","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","followed"],"mappings":"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","file":"static/js/main.60c9e8d5.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": '1d2450bf-cc12-47c6-a828-8bdd69ea5641'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\nexport const usersApi = {\r\n    getUsersRequest(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`/users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    unfollowRequest(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    followRequest(userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId = 2) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha='') {\r\n        return instance.post(`auth/login`, {email, password, rememberMe,captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__k0PFk\",\"item\":\"Navbar_item__8r-id\",\"active\":\"Navbar_active__ZvF8R\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/profile\" activeClassName={styles.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={`${styles.item} ${styles.active}`} >\r\n        <NavLink to=\"/dialogs\" activeClassName={styles.active}>Dialogs</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/users\" activeClassName={styles.active}>Users</NavLink>\r\n      </div>\r\n        <div className={styles.item}>\r\n        <NavLink to=\"/news\" activeClassName={styles.active}>News</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/music\" activeClassName={styles.active}>Music</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/settings\" activeClassName={styles.active}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport headerLogo from '../../assets/React-logo.png'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    return <header className={styles.header}>\r\n        <div className={styles.logoContainer}>\r\n            <img src={headerLogo} alt={'logo'}/>\r\n        </div>\r\n        <h3>React Social Network Experience</h3>\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth ? <div className={styles.loginBlockContainer}>\r\n                    <Button onClick={props.logout} variant=\"contained\" size={'small'}>Log out</Button>\r\n                    <div>{props.login}</div>\r\n            </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.email\r\n    });\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_USER_DATA = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitializedSuccess = () => {\r\n    return {type: SET_USER_DATA}\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        // let promise2 = dispatch(someThank);\r\n        Promise.all([promise]).then(()=> {\r\n            dispatch(setInitializedSuccess())\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Suspense fallback={<h2>Loading...</h2>}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" render={() => (<Redirect to=\"/profile\"/>)}/>\r\n                            <Route path='/profile/:userId?' render={() => <ProfileContainer store={this.props.store}/>}/>\r\n                            <Route path='/dialogs' render={() => <DialogsContainer store={this.props.store}/>}/>\r\n                            <Route path='/users' render={() => <UsersContainer/>}/>\r\n                            <Route path='/login' render={() => <LoginPage/>}/>\r\n                            <Route path='*' render={() => <div>404 Not Found</div>}/>\r\n                        </Switch>\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppWrapper = compose(\r\n    connect(mapStateToProps, {initializeApp}),\r\n    withRouter\r\n)(App);\r\n\r\nconst SocialNetwork = (props) => {\r\n    return <HashRouter basename={'/'}>\r\n        <Provider store={store}>\r\n            <AppWrapper/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\nexport default SocialNetwork;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport SocialNetwork from \"./App\";\r\n\r\nReactDOM.render(<SocialNetwork/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth) => {\r\n    return {type: SET_USER_DATA, payload: {userId, login, email, isAuth}}\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => {\r\n    return {type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}}\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Kl-b\",\"logoContainer\":\"Header_logoContainer__14N6M\",\"loginBlock\":\"Header_loginBlock__-gIxk\"};","import React from \"react\";\r\nimport styles from \"../../common/Preloader/Preloader.module.css\";\r\nimport preloader from \"../../../assets/Preloader.gif\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img className={styles.preloader} src={preloader} alt={'Preloader'}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit, reset} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'How are you?', likesCount: 15},\r\n        {id: 2, message: 'It`s my first post', likesCount: 20}\r\n    ],\r\n    newPostText: 'Пирожок',\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 57,\r\n                message: action.newPostText,\r\n                newPostText: 'Пирожок',\r\n                likesCount: 11\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText) => { return {type: ADD_POST, newPostText}};\r\nexport const setUserProfile = (profile) => {return {type: SET_USER_PROFILE, profile}};\r\nexport const setStatus = (status) => {return {type: SET_STATUS, status}};\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const addPost = (newPostText) => (dispatch) => {\r\n    dispatch(addPostActionCreator(newPostText));\r\n    dispatch(reset('ProfileAddNewPostForm'));\r\n}\r\n\r\nexport const getProfileStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateProfileStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit('editProfile', {_error: response.data.messages[0]}))\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import {reset} from 'redux-form';\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: 'Dimych', id: 1},\r\n        {name: 'Andrey', id: 2},\r\n        {name: 'Svetka', id: 3},\r\n        {name: 'Petya', id: 4}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'First'},\r\n        {id: 2, message: 'Second'},\r\n        {id: 3, message: 'Third'},\r\n        {id: 4, message: 'Fourth'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageText\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 8, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addMessageActionCreator = (newMessageText) => {\r\n    return {type: ADD_MESSAGE, newMessageText}\r\n}\r\n\r\nexport const addMessage = (newMessageText) => (dispatch) => {\r\n    dispatch(addMessageActionCreator(newMessageText));\r\n    dispatch(reset('dialogsAddMessage'));\r\n}\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n            if (item[objPropName] === itemId) {\r\n                return {...item, ...newObjProps}\r\n            }\r\n            return item;\r\n        }\r\n    )\r\n}","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {type: FOLLOW, userId}\r\n}\r\nexport const unfollowSuccess = (userId) => {\r\n    return {type: UNFOLLOW, userId}\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage}\r\n}\r\nexport const setTotalUsersCount = (totalCount) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, count: totalCount}\r\n}\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFetching}\r\n}\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n    return {type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId}\r\n}\r\n\r\n\r\nexport const getUsersThunkCreator = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    dispatch(toggleIsFetching(false));\r\n    let response = await usersApi.getUsersRequest(page, pageSize)\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersApi.followRequest.bind(usersApi), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersApi.unfollowRequest.bind(usersApi), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/React-logo.03517a5f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2QYvA\"};","module.exports = __webpack_public_path__ + \"static/media/Preloader.58153597.gif\";"],"sourceRoot":""}